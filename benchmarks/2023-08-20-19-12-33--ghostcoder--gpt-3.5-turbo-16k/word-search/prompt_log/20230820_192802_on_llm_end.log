method: on_llm_end [2023-08-20 19:28:02]
llm_output: {"token_usage": {"prompt_tokens": 1594, "completion_tokens": 360, "total_tokens": 1954}, "model_name": "gpt-3.5-turbo-16k"}
prompt:
I apologize for the confusion. It seems that the code is not correctly returning the expected results. 

To fix the code, we need to modify the search algorithm to handle all possible directions: left-to-right, right-to-left, vertical, and diagonal. 

Here's the updated code:

```python
class Point:
    def __init__(self, x, y):
        self.x = x
        self.y = y

    def __eq__(self, other):
        return self.x == other.x and self.y == other.y


class WordSearch:
    def __init__(self, puzzle):
        self.puzzle = puzzle

    def search(self, word):
        word_length = len(word)
        rows = len(self.puzzle)
        cols = len(self.puzzle[0])

        for i in range(rows):
            for j in range(cols):
                if self.puzzle[i][j] == word[0]:
                    for dx, dy in [(-1, -1), (-1, 0), (-1, 1), (0, -1), (0, 1), (1, -1), (1, 0), (1, 1)]:
                        x, y = i, j
                        found = True
                        for k in range(1, word_length):
                            x += dx
                            y += dy
                            if x < 0 or x >= rows or y < 0 or y >= cols or self.puzzle[x][y] != word[k]:
                                found = False
                                break
                        if found:
                            return Point(j, i), Point(y, x)
        return None, None
```

Please try running the tests again and let me know if the issue is resolved.
---
