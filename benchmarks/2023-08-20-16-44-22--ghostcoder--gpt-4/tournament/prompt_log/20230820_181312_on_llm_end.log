method: on_llm_end [2023-08-20 18:13:12]
llm_output: {"token_usage": {"prompt_tokens": 2446, "completion_tokens": 477, "total_tokens": 2923}, "model_name": "gpt-4"}
prompt:
The issue here is that the function is returning a string, while the tests are expecting a list of strings. We can fix this by changing the output from a string to a list of strings. 

Here's the updated code:

Filepath: tournament.py
```python
def tally(rows):
    teams = {}

    for row in rows:
        team1, team2, result = row.split(';')

        if team1 not in teams:
            teams[team1] = {'MP': 0, 'W': 0, 'D': 0, 'L': 0, 'P': 0}
        if team2 not in teams:
            teams[team2] = {'MP': 0, 'W': 0, 'D': 0, 'L': 0, 'P': 0}

        teams[team1]['MP'] += 1
        teams[team2]['MP'] += 1

        if result == 'win':
            teams[team1]['W'] += 1
            teams[team1]['P'] += 3
            teams[team2]['L'] += 1
        elif result == 'loss':
            teams[team2]['W'] += 1
            teams[team2]['P'] += 3
            teams[team1]['L'] += 1
        else:  # draw
            teams[team1]['D'] += 1
            teams[team1]['P'] += 1
            teams[team2]['D'] += 1
            teams[team2]['P'] += 1

    sorted_teams = sorted(teams.items(), key=lambda x: (-x[1]['P'], x[0]))

    output = ['Team                           | MP |  W |  D |  L |  P']
    for team, stats in sorted_teams:
        output.append(f"{team:30} | {stats['MP']:2} | {stats['W']:2} | {stats['D']:2} | {stats['L']:2} | {stats['P']:2}")

    return output
```
This function now returns a list of strings, where each string is a row in the output table. This should match the expected output format of the tests.
---
