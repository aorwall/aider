method: on_llm_end [2023-09-02 18:18:18]
llm_output: null
prompt:
Here is an implementation of the requirements using Python:

Filepath: react.py
```python
class InputCell:
    def __init__(self, initial_value=None):
        self._value = initial_value
        self._callbacks = []

    @property
    def value(self):
        return self._value

    @value.setter
    def value(self, new_val):
        if self._value != new_val:
            self._value = new_val
            for callback in self._callbacks:
                callback()
                
    def add_callback(self, callback):
        self._callbacks.append(callback)
        
    def remove_callback(self, callback):
        if callback in self._callbacks:
            self._callbacks.remove(callback)

            
class ComputeCell:
    def __init__(self, inputs, compute_function):
        self._inputs = inputs
        self._compute_function = compute_function
        self._value = None
        self._callbacks = []
        self.recalculate()  # Sets an initial value

        for input_cell in inputs:
            input_cell.add_callback(self.recalculate)

    def recalculate(self):
        new_val = self._compute_function([input_cell.value for input_cell in self._inputs])
        if self._value != new_val:
            self._value = new_val
            for callback in self._callbacks:
                callback()
    
    @property
    def value(self):
        return self._value

    def add_callback(self, callback):
        self._callbacks.append(callback)
        
    def remove_callback(self, callback):
        if callback in self._callbacks:
            self._callbacks.remove(callback)
```
In this implementation, the `InputCell` class is used to create cells whose values can be set by outside sources. When an input cell's value changes via the `value` property, it notifies all of its registered callbacks. The `ComputeCell` class represents cells that have their values computed based on other cells. It registers itself as a callback to all of its input cells and updates its own value using the provided compute function whenever any of its input cells change. If the newly calculated value differs from the previous one, it will notify all of its registered callbacks.
---
