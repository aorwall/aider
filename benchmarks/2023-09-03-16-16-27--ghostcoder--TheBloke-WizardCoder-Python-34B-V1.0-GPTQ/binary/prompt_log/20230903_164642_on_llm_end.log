method: on_llm_end [2023-09-03 16:46:42]
llm_output: null
prompt:
Here's the modified implementation for the given problem:

```python
def parse_binary(binary_string):
    """Converts a binary string into its decimal representation.

    Args:
        binary_string (str): A string representing a binary number.

    Returns:
        int: The integer value of the binary string.

    Raises:
        ValueError: If the input is not a valid binary literal.
    
    Examples:
        >>> parse_binary('101')
        5
        >>> parse_binary('1101010')
        22
        >>> parse_binary('abc')
        ValueError: Invalid binary literal: abc
    """
    # Check if all characters in the string are either '0' or '1'.
    if not all(char in ('0', '1') for char in binary_string):
        raise ValueError("Invalid binary literal: {}".format(binary_string))
    
    return int(binary_string, 2)
```

We first check whether each character in the input string is either '0' or '1'. If there are any other characters present, we raise a `ValueError` with a custom error message indicating that the input is invalid. Otherwise, we convert the binary string to an integer using the built-in `int()` method with a second parameter of 2, which specifies that the input is in base 2 (i.e., binary). 
---
