method: on_llm_end [2023-09-02 19:24:47]
llm_output: null
prompt:
Filepath: run_length_encoding.py
```python
def decode(string):
    """Decode a RLE compressed string."""
    result = ""
    index = 0
    while index < len(string):
        if string[index].isdigit():
            count = int(string[index])
            char = string[index + 1]
            result += char * count
            index += 2
        else:
            result += string[index]
            index += 1
    return result


def encode(string):
    """Encode a string using RLE."""
    result = ""
    prev_char = None
    count = 1
    for char in string:
        if char == prev_char:
            count += 1
        else:
            if prev_char is not None:
                result += str(count) + prev_char
            prev_char = char
            count = 1
    if prev_char is not None:
        result += str(count) + prev_char
    return result

```

Explanation:
The `decode` function takes an input string that has been encoded with RLE and returns the original uncompressed string.
It iterates through each character of the input string, checking whether it is a digit (representing the count) or not. If it's a digit, it extracts the count and adds the corresponding number of characters to the output string. Otherwise, it appends the character directly to the output string.

The `encode` function takes an input string and compresses it using RLE. It keeps track of the current character and its count, adding them to the output string when a new character is encountered. The final count and character are added at the end to ensure the last sequence is included in the output as well.
---
