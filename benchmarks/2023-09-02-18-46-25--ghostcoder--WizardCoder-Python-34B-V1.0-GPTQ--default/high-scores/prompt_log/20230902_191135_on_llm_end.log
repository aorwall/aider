method: on_llm_end [2023-09-02 19:11:35]
llm_output: null
prompt:
Here's an implementation of the `HighScores` class with the required methods:

```python
class HighScores:
    def __init__(self, scores):
        self.scores = sorted(scores, reverse=True)
        
    def get_highest(self):
        """Returns the highest score."""
        return self.scores[0] if len(self.scores) > 0 else None
    
    def get_last(self):
        """Returns the last added score."""
        return self.scores[-1] if len(self.scores) > 0 else None
    
    def get_top_three(self):
        """Returns a list containing the three highest scores."""
        return self.scores[:3] if len(self.scores) >= 3 else []
```

The `__init__()` method takes a list of scores as input and sorts it in descending order using the `sorted()` function. This ensures that the first element is always the highest score. The `get_highest()` method simply returns the first element of the sorted list, while the `get_last()` method returns the last element (which is also the lowest since we sorted the list in descending order). The `get_top_three()` method returns the first three elements of the sorted list, or an empty list if there are less than three scores. If you want to add more functionality later on, such as adding new scores or removing them, you can modify this class accordingly.
---
