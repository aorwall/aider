method: on_llm_end [2023-08-31 13:53:37]
llm_output: null
prompt:
 Filepath: armstrong_numbers.py
```python
def is_armstrong_number(number):
    # Calculate the number of digits in the number
    num_digits = len(str(number))

    # Initialize a variable to store the sum of the digits
    digit_sum = 0

    # Loop through each digit in the number
    for digit in str(number):
        # Calculate the power of the digit
        digit_power = int(digit) ** num_digits

        # Add the power of the digit to the sum
        digit_sum += digit_power

    # Check if the sum is equal to the original number
    if digit_sum == number:
        return True
    else:
        return False
```
Explanation:
In the `is_armstrong_number` function, we first calculate the number of digits in the number using the `len` function. We then initialize a variable `digit_sum` to store the sum of the digits. We loop through each digit in the number using a `for` loop, and for each digit, we calculate its power by raising it to the number of digits. We then add the power of the digit to the `digit_sum`. After the loop, we check if the `digit_sum` is equal to the original number. If it is, we return `True`, otherwise we return `False`.

Note: The `str` function is used to convert the number to a string, so that we can loop through each digit in the number. The `int` function is used to convert the digit back to an integer, so that we can raise it to a power.
---
