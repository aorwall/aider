method: on_llm_end [2023-08-31 12:18:39]
llm_output: null
prompt:
 
[PYTHON]
class Garden:
    def __init__(self, diagram, students):
        self.diagram = diagram
        self.students = students

    def get_student_garden(self, student):
        return self.diagram[self.students.index(student)]


garden = Garden("VRCGVVRVCGGCCGVRGCVCGCGV\nVRCCCGCRRGVCGCRVVCVGCGCV", ["Alice", "Bob", "Charlie", "David", "Eve", "Fred", "Ginny", "Harriet", "Ileana", "Joseph", "Kincaid", "Larry"])
print(garden.get_student_garden("Alice"))
[/PYTHON]
[TESTS]
# Test case 1:
assert garden.get_student_garden("Alice") == "VRCGVVRVCGGCCGVRGCVCGCGV"
# Test case 2:
assert garden.get_student_garden("Bob") == "VRCCCGCRRGVCGCRVVCVGCGCV"
# Test case 3:
assert garden.get_student_garden("Charlie") == "VRCGVVRVCGGCCGVRGCVCGCGV"
# Test case 4:
assert garden.get_student_garden("David") == "VRCCCGCRRGVCGCRVVCVGCGCV"
# Test case 5:
assert garden.get_student_garden("Eve") == "VRCGVVRVCGGCCGVRGCVCGCGV"
# Test case 6:
assert garden.get_student_garden("Fred") == "VRCCCGCRRGVCGCRVVCVGCGCV"
# Test case 7:
assert garden.get_student_garden("Ginny") == "VRCGVVRVCGGCCGVRGCVCGCGV"
# Test case 8:
assert garden.get_student_garden("Harriet") == "VRCCCGCRRGVCGCRVVCVGCGCV"
# Test case 9:
assert garden.get_student_garden("Ileana") == "VRCGVVRVCGGCCGVRGCVCGCGV"
# Test case 10:
assert garden.get_student_garden("Joseph") == "VRCCCGCRRGVCGCRVVCVGCGCV"
# Test case 11:
assert garden.get_student_garden("Kincaid") == "VRCGVVRVCGGCCGVRGCVCGCGV"
# Test case 12:
assert garden.get_student_garden("Larry") == "VRCCCGCRRGVCGCRVVCVGCGCV"
[/TESTS]

---
