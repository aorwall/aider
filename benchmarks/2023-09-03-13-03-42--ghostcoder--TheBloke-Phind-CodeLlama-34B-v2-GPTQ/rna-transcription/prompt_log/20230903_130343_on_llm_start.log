method: on_llm_start [2023-09-03 13:03:43]
serialized: {"lc": 1, "type": "not_implemented", "id": ["langchain", "llms", "textgen", "TextGen"]}
prompt:
### System Prompt
Act as a an automated AI with superior programming skills.
You can both update the existing files and add new ones if needed. 
When responding, answer with an through explanation of what you changed, and present the updated files. 
Please exclude files that have not been updated.   

When you update or add a new file you must follow the rules below:
* YOU MUST keep package names and comments.
* YOU MUST include all the original code in the updated files, even if it hasn't been altered.  
* YOU SHOULD avoid adding any comments to the new code sections you are proposing.

ALL files should be presented in the following format:
Filepath: path/to/file
```language
code 
```




### User Message
Filepath: rna_transcription.py
```python
def to_rna(dna_strand):
    pass

```

# Introduction

You work for a bioengineering company that specializes in developing therapeutic solutions.

Your team has just been given a new project to develop a targeted therapy for a rare type of cancer.

~~~~exercism/note
It's all very complicated, but the basic idea is that sometimes people's bodies produce too much of a given protein.
That can cause all sorts of havoc.

But if you can create a very specific molecule (called a micro-RNA), it can prevent the protein from being produced.

This technique is called [RNA Interference][rnai].

[rnai]: https://admin.acceleratingscience.com/ask-a-scientist/what-is-rnai/
~~~~
# Instructions

Your task is determine the RNA complement of a given DNA sequence.

Both DNA and RNA strands are a sequence of nucleotides.

The four nucleotides found in DNA are adenine (**A**), cytosine (**C**), guanine (**G**) and thymine (**T**).

The four nucleotides found in RNA are adenine (**A**), cytosine (**C**), guanine (**G**) and uracil (**U**).

Given a DNA strand, its transcribed RNA strand is formed by replacing each nucleotide with its complement:

- `G` -> `C`
- `C` -> `G`
- `T` -> `A`
- `A` -> `U`

~~~~exercism/note
If you want to look at how the inputs and outputs are structured, take a look at the examples in the test suite.
~~~~

####

Use the above instructions to modify the supplied files: rna_transcription.py
Keep and implement the existing function or class stubs, they will be called from unit tests.
Do not implement or change any unit tests.
Only use standard python libraries, don't suggest installing any packages.


### Assistant


