[
  {
    "items": [
      {
        "type": "text",
        "text": "# Introduction\n\nYou work for a company that sells fonts through their website.\nThey'd like to show a different sentence each time someone views a font on their website.\nTo give a comprehensive sense of the font, the random sentences should use **all** the letters in the English alphabet.\n\nThey're running a competition to get suggestions for sentences that they can use.\nYou're in charge of checking the submissions to see if they are valid.\n\n~~~~exercism/note\nPangram comes from Greek, \u03c0\u03b1\u03bd \u03b3\u03c1\u03ac\u03bc\u03bc\u03b1, pan gramma, which means \"every letter\".\n\nThe best known English pangram is:\n\n> The quick brown fox jumps over the lazy dog.\n~~~~\n# Instructions\n\nYour task is to figure out if a sentence is a pangram.\n\nA pangram is a sentence using every letter of the alphabet at least once.\nIt is case insensitive, so it doesn't matter if a letter is lower-case (e.g. `k`) or upper-case (e.g. `K`).\n\nFor this exercise, a sentence is a pangram if it contains each of the 26 letters in the English alphabet.\n\n####\n\nUse the above instructions to modify the supplied files: pangram.py\nKeep and implement the existing function or class stubs, they will be called from existing unit tests.\nOnly use standard python libraries, don't suggest installing any packages.\n",
        "need_input": false
      },
      {
        "type": "file",
        "content": "",
        "language": "python",
        "file_path": "pangram.py",
        "readonly": false
      }
    ],
    "sender": "Human",
    "summary": null,
    "stats": null,
    "commit_id": null,
    "discarded": false
  },
  {
    "items": [
      {
        "type": "updated_file",
        "content": "import re\nfrom collections import Counter\n\ndef is_pangram(sentence):\n    \"\"\"\n    Check if a sentence is a pangram.\n    \n    Args:\n        sentence (str): Sentence to check.\n        \n    Returns:\n        bool: True if sentence is a pangram, False otherwise.\n    \"\"\"\n    # Convert sentence to lowercase\n    sentence = sentence.lower()\n\n    # Remove punctuation and spaces\n    sentence = re.sub('[^a-z]', '', sentence)\n\n    # Count number of occurrences of each letter\n    letter_counts = Counter(sentence)\n\n    # Check if there are exactly 26 unique letters\n    return len(letter_counts) == 26\n",
        "language": "python",
        "file_path": "pangram.py",
        "readonly": false,
        "error": null,
        "invalid": false
      }
    ],
    "sender": "AI",
    "summary": null,
    "stats": null,
    "commit_id": null,
    "discarded": false
  }
]