method: on_llm_end [2023-08-20 18:28:15]
llm_output: {"token_usage": {"prompt_tokens": 430, "completion_tokens": 260, "total_tokens": 690}, "model_name": "gpt-4"}
prompt:
To implement the HighScores class, we need to store the scores in the class and implement methods to return the highest score, the last added score, and the three highest scores.

Here's how we can do it:

Filepath: high_scores.py
```python
class HighScores:
    def __init__(self, scores):
        self.scores = scores

    def latest(self):
        return self.scores[-1]

    def personal_best(self):
        return max(self.scores)

    def personal_top_three(self):
        return sorted(self.scores, reverse=True)[:3]
```

In the `__init__` method, we store the scores in the `self.scores` attribute.

The `latest` method returns the last score in the list. In Python, `list[-1]` gives the last element of the list.

The `personal_best` method returns the highest score. The `max` function returns the maximum value in a list.

The `personal_top_three` method returns the three highest scores. The `sorted` function sorts the list in descending order (because of `reverse=True`), and `[:3]` gives the first three elements of the sorted list. If there are less than three scores, it will return all of them.
---
